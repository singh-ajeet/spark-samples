buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}
plugins {
    id 'java'
    id 'scala'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'com.oracle.oci.dataflow.samples'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    /**
     * Spark & Scala dependencies will be provided by OCI DataFlow environment
     */
    compileOnly group: 'org.scala-lang', name: 'scala-library', version: '2.11.12'
    compileOnly group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.4.4'
    compileOnly group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.4.4'

    /**
     * Application's dependencies -
     * either these dependencies should be bundled with application's jar or should be provided in archive option
     */
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    compile ('com.github.scopt:scopt_2.11:3.3.0') {
        exclude  group: 'org.scala-lang', module: 'scala-library'
    }
}

/**
 * This task create a fat jar of the application with all required dependencies (in compile scope)
 */
task buildWithDependencies(){
    dependsOn shadowJar
}

/**
 * This task create two artifacts - dependencies.zip and application's jar
 */
task buildWithoutDependencies(type: Zip) {
    dependsOn build
    archiveFileName  = "dependencies.zip"
    destinationDirectory  = file("$buildDir/libs")

    from (configurations.compile) {
        into ('java')
    }
}


